####################################################
### APP ðŸ™‚ ###
#####################################################
NODE_ENV=production
PORT=8000
API_VERSION=v1.0.0

####################################################
### DATABASE ðŸ™‚ ###
#####################################################
DB_TYPE=postgres
DB_HOST=127.0.0.1
DB_PORT=5432
DB_USERNAME=postgres
DB_PASSWORD=postgres
DB_DATABASE=backend-db
DB_URL_DEV=postgres://postgres:postgres@localhost:5432/backend-db
# DATABASE_URL=postgresql://postgres:postgres@dev-backend-db.c8bkodns6c9v.us-east-1.rds.amazonaws.com:5432/dev-backend-db
# POSTGRES_DB=backend-db
# POSTGRES_USER=postgres
# POSTGRES_PASSWORD=postgres


####################################################
### JWT AUTHENTICATION ðŸ™‚ ###
#####################################################
JWT_EXPIRATION_TIME = 3600
JWT_SECRET_KEY = xNkyCQcPQjH7QS1Y&EztVZzcurqqc*emVjcN23H%Mg&KFdpL5uhSxf*6VJ&w

####################################################
### REDIS ðŸ™‚ ###
#####################################################

# REDIS_URL = redis://username:password@redis.server:6379
REDIS_URL = rediss://redis:6379
# REDIS_HOST = localhost
# Running Redis as a container, then you'll need to set the REDIS_HOST to the name of your Redis container (redis in this case)
# REDIS_HOST= redis 
REDIS_PORT = 6379

####################################################
### SESSION ðŸ™‚ ###
#####################################################

SESSION_SECRET_KEY = spMz5vwD5Lvu7FU83z6vnx2Fa&@NXfxWt5CpKdgzABQhfw%S4XeGGS4Zc&Q&